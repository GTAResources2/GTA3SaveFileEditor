package thehambone.gtatools.gta3savefileeditor.gui.page;

import javax.swing.DefaultComboBoxModel;
import thehambone.gtatools.gta3savefileeditor.game.GameConstants;
import thehambone.gtatools.gta3savefileeditor.savefile.SaveFile;
import thehambone.gtatools.gta3savefileeditor.savefile.struct.typedefs.GTAInteger;
import thehambone.gtatools.gta3savefileeditor.savefile.struct.typedefs.gtaobjdefs.Gang;
import thehambone.gtatools.gta3savefileeditor.gui.component.cellrenderer.GangListCellRenderer;
import thehambone.gtatools.gta3savefileeditor.gui.component.cellrenderer.VehicleListCellRenderer;
import thehambone.gtatools.gta3savefileeditor.gui.component.cellrenderer.WeaponListCellRenderer;
import thehambone.gtatools.gta3savefileeditor.io.IO;

/**
 * 
 * @author thehambone
 * @version 0.1
 * @since 0.1, March 16, 2015
 */
public class GangsPage extends Page
{
    private static final int PLAYER_MASK = 0x01;
    
    public GangsPage()
    {
        super("Gangs", Visibility.VISIBLE_WHEN_GAMESAVE_LOADED_ONLY);
        initComponents();
        addNotifiersToComponents(mainPanel, gangComboBox);
    }
    
    @Override
    @SuppressWarnings("unchecked")
    public void loadPage()
    {
        IO.debugf("Loading page: %s...\n", getTitle());
        
        isPageInitializing = true;
        vars = SaveFile.getCurrentlyLoadedFile().getVariables();
        
        DefaultComboBoxModel<GameConstants.Gang> gangComboBoxModel = new DefaultComboBoxModel();
        for (GameConstants.Gang g : GameConstants.Gang.values()) {
            gangComboBoxModel.addElement(g);
        }
        gangComboBox.setModel(gangComboBoxModel);
        gangComboBox.setRenderer(new GangListCellRenderer());
        
        DefaultComboBoxModel<GameConstants.Vehicle> vehicleComboBoxModel = new DefaultComboBoxModel();
        for (GameConstants.Vehicle v : GameConstants.Vehicle.values()) {
            vehicleComboBoxModel.addElement(v);
        }
        vehicleComboBox.setRenderer(new VehicleListCellRenderer());
        vehicleComboBox.setModel(vehicleComboBoxModel);
        
        DefaultComboBoxModel<GameConstants.Weapon> primaryWeaponComboBoxModel = new DefaultComboBoxModel<>();
        DefaultComboBoxModel<GameConstants.Weapon> secondaryWeaponComboBoxModel = new DefaultComboBoxModel<>();
        for (GameConstants.Weapon w : GameConstants.Weapon.values()) {
            primaryWeaponComboBoxModel.addElement(w);
            secondaryWeaponComboBoxModel.addElement(w);
        }
        primaryWeaponComboBox.setModel(primaryWeaponComboBoxModel);
        primaryWeaponComboBox.setRenderer(new WeaponListCellRenderer());
        secondaryWeaponComboBox.setModel(secondaryWeaponComboBoxModel);
        secondaryWeaponComboBox.setRenderer(new WeaponListCellRenderer());
        
        updatePanels(GameConstants.Gang.GANG01);
        
        isPageInitializing = false;
    }
    
    private int getThreatForGang(GameConstants.Gang g)
    {
        int pedTypeID = g.getID() + 7;
        return vars.aPedTypes.getValueAt(pedTypeID).getThreat();
    }
    
    private void setThreatForGang(GameConstants.Gang g, int threat)
    {
        int pedTypeID = g.getID() + 7;
        vars.aPedTypes.getValueAt(pedTypeID).setThreat(threat);
    }
    
    private void updatePanels(GameConstants.Gang g)
    {
        isPageInitializing = true;
        
        Gang gang = vars.aGangs.getValueAt(g.getID());
        
        for (GameConstants.Vehicle v : GameConstants.Vehicle.values()) {
            if (v.getID() == gang.getVehicleIDAsVariable().getValue().intValue()) {
                vehicleComboBox.setSelectedItem(v);
                break;
            }
        }
        
        for (GameConstants.Weapon w :  GameConstants.Weapon.values()) {
            if (w.getID() == gang.getPrimaryWeaponIDAsVariable().getValue().intValue()) {
                primaryWeaponComboBox.setSelectedItem(w);
            }
            if (w.getID() == gang.getSecondaryWeaponIDAsVariable().getValue().intValue()) {
                secondaryWeaponComboBox.setSelectedItem(w);
            }
        }
        
        int threat = getThreatForGang(g);
        hostileTowardsPlayerCheckBox.setSelected((threat & PLAYER_MASK) == PLAYER_MASK);
        
        isPageInitializing = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        scrollPane = new javax.swing.JScrollPane();
        mainPanel = new javax.swing.JPanel();
        gangLabel = new javax.swing.JLabel();
        gangComboBox = new javax.swing.JComboBox();
        vehiclePanel = new javax.swing.JPanel();
        vehicleComboBox = new thehambone.gtatools.gta3savefileeditor.gui.component.VariableValueComboBox();
        weaponsPanel = new javax.swing.JPanel();
        primaryWeaponLabel = new javax.swing.JLabel();
        primaryWeaponComboBox = new thehambone.gtatools.gta3savefileeditor.gui.component.VariableValueComboBox();
        secondaryWeaponLabel = new javax.swing.JLabel();
        secondaryWeaponComboBox = new thehambone.gtatools.gta3savefileeditor.gui.component.VariableValueComboBox();
        hostilityPanel = new javax.swing.JPanel();
        hostileTowardsPlayerCheckBox = new thehambone.gtatools.gta3savefileeditor.gui.component.VariableValueCheckBox();

        gangLabel.setText("Gang:");

        gangComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gangComboBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                gangComboBoxActionPerformed(evt);
            }
        });

        vehiclePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Vehicle"));

        vehicleComboBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                vehicleComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout vehiclePanelLayout = new javax.swing.GroupLayout(vehiclePanel);
        vehiclePanel.setLayout(vehiclePanelLayout);
        vehiclePanelLayout.setHorizontalGroup(
            vehiclePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vehiclePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(vehicleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        vehiclePanelLayout.setVerticalGroup(
            vehiclePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vehiclePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(vehicleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        weaponsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Weapons"));

        primaryWeaponLabel.setText("Primary weapon:");

        primaryWeaponComboBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                primaryWeaponComboBoxActionPerformed(evt);
            }
        });

        secondaryWeaponLabel.setText("Secondary weapon:");

        secondaryWeaponComboBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                secondaryWeaponComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout weaponsPanelLayout = new javax.swing.GroupLayout(weaponsPanel);
        weaponsPanel.setLayout(weaponsPanelLayout);
        weaponsPanelLayout.setHorizontalGroup(
            weaponsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(weaponsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(weaponsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(primaryWeaponLabel)
                    .addComponent(secondaryWeaponLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(weaponsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(primaryWeaponComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secondaryWeaponComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        weaponsPanelLayout.setVerticalGroup(
            weaponsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(weaponsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(weaponsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(primaryWeaponLabel)
                    .addComponent(primaryWeaponComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(weaponsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(secondaryWeaponLabel)
                    .addComponent(secondaryWeaponComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        hostilityPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Hostility"));

        hostileTowardsPlayerCheckBox.setText("Hostile towards player");
        hostileTowardsPlayerCheckBox.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                hostileTowardsPlayerCheckBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout hostilityPanelLayout = new javax.swing.GroupLayout(hostilityPanel);
        hostilityPanel.setLayout(hostilityPanelLayout);
        hostilityPanelLayout.setHorizontalGroup(
            hostilityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hostilityPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hostileTowardsPlayerCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        hostilityPanelLayout.setVerticalGroup(
            hostilityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hostilityPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(hostileTowardsPlayerCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(gangLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gangComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(vehiclePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(weaponsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hostilityPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gangLabel)
                    .addComponent(gangComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(hostilityPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(weaponsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(vehiclePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        scrollPane.setViewportView(mainPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrollPane)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void gangComboBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_gangComboBoxActionPerformed
    {//GEN-HEADEREND:event_gangComboBoxActionPerformed
        GameConstants.Gang g = (GameConstants.Gang)gangComboBox.getSelectedItem();
        updatePanels(g);
    }//GEN-LAST:event_gangComboBoxActionPerformed

    private void vehicleComboBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_vehicleComboBoxActionPerformed
    {//GEN-HEADEREND:event_vehicleComboBoxActionPerformed
        GameConstants.Gang g = (GameConstants.Gang)gangComboBox.getSelectedItem();
        GameConstants.Vehicle v = (GameConstants.Vehicle)vehicleComboBox.getSelectedItem();
        vars.aGangs.getValueAt(g.getID()).getVehicleIDAsVariable().setValue(new GTAInteger(v.getID()));
    }//GEN-LAST:event_vehicleComboBoxActionPerformed

    private void primaryWeaponComboBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_primaryWeaponComboBoxActionPerformed
    {//GEN-HEADEREND:event_primaryWeaponComboBoxActionPerformed
        GameConstants.Gang g = (GameConstants.Gang)gangComboBox.getSelectedItem();
        GameConstants.Weapon w = (GameConstants.Weapon)primaryWeaponComboBox.getSelectedItem();
        vars.aGangs.getValueAt(g.getID()).getPrimaryWeaponIDAsVariable().setValue(new GTAInteger(w.getID()));
    }//GEN-LAST:event_primaryWeaponComboBoxActionPerformed

    private void secondaryWeaponComboBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_secondaryWeaponComboBoxActionPerformed
    {//GEN-HEADEREND:event_secondaryWeaponComboBoxActionPerformed
        GameConstants.Gang g = (GameConstants.Gang)gangComboBox.getSelectedItem();
        GameConstants.Weapon w = (GameConstants.Weapon)secondaryWeaponComboBox.getSelectedItem();
        vars.aGangs.getValueAt(g.getID()).getSecondaryWeaponIDAsVariable().setValue(new GTAInteger(w.getID()));
    }//GEN-LAST:event_secondaryWeaponComboBoxActionPerformed

    private void hostileTowardsPlayerCheckBoxActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_hostileTowardsPlayerCheckBoxActionPerformed
    {//GEN-HEADEREND:event_hostileTowardsPlayerCheckBoxActionPerformed
        GameConstants.Gang g = (GameConstants.Gang)gangComboBox.getSelectedItem();
        int threat = getThreatForGang(g);
        if (hostileTowardsPlayerCheckBox.isSelected()) {
            threat |= PLAYER_MASK;
        } else {
            threat &= ~PLAYER_MASK;
        }
        setThreatForGang(g, threat);
    }//GEN-LAST:event_hostileTowardsPlayerCheckBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox gangComboBox;
    private javax.swing.JLabel gangLabel;
    private thehambone.gtatools.gta3savefileeditor.gui.component.VariableValueCheckBox hostileTowardsPlayerCheckBox;
    private javax.swing.JPanel hostilityPanel;
    private javax.swing.JPanel mainPanel;
    private thehambone.gtatools.gta3savefileeditor.gui.component.VariableValueComboBox primaryWeaponComboBox;
    private javax.swing.JLabel primaryWeaponLabel;
    private javax.swing.JScrollPane scrollPane;
    private thehambone.gtatools.gta3savefileeditor.gui.component.VariableValueComboBox secondaryWeaponComboBox;
    private javax.swing.JLabel secondaryWeaponLabel;
    private thehambone.gtatools.gta3savefileeditor.gui.component.VariableValueComboBox vehicleComboBox;
    private javax.swing.JPanel vehiclePanel;
    private javax.swing.JPanel weaponsPanel;
    // End of variables declaration//GEN-END:variables
}